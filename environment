#!/usr/bin/env bash
if [ "${BASH_SOURCE-}" = "$0" ]; then
    echo "You must source this script: \$ source $0" >&2
    exit 1
fi

deactivate () {
    # reset old environment variables
    # ! [ -z ${VAR+_} ] returns true if VAR is declared at all
    if ! [ -z "${_OLD_ENVIRONMENT_PATH:+_}" ] ; then
        PATH="$_OLD_ENVIRONMENT_PATH"
        export PATH
        unset _OLD_ENVIRONMENT_PATH
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
        hash -r 2>/dev/null
    fi

    if [ ! "${1-}" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# unset irrelevant variables
deactivate nondestructive

# manage pathes
if [ -n "${ZSH_VERSION-}" ] ; then
    release_current_dir="$(dirname "$0")"
else
    release_current_dir="$(dirname "${BASH_SOURCE[0]}")"
fi

if [[ "$(uname)" == "Darwin" ]]; then
    release_topdir_abs="$("$release_current_dir"/libexec/realpath "$release_current_dir")"
else
    release_topdir_abs="$(realpath "$release_current_dir")"
fi

_OLD_ENVIRONMENT_PATH="$PATH"
PATH="$release_topdir_abs/zz_tools/bin:$release_topdir_abs/zz_tools/ap_cli:$PATH"
export PATH

if [ -f "environment.local" ]; then
  echo "sourcing environment.local ..."
  source environment.local
  echo "Gemdos drive folder : ${GEMDOS_DRIVE}"
  echo "Autorun folder : ${AUTORUN_FOLDER}"
else
  echo "Use 'ap setup' to initialize environment.local !"
fi
# shortname for the cli
alias ap='ap.bash'

# other utilities
export LOG_TRACE="\e[90mTRACE\e[0m --"
export LOG_INFO="\e[96mINFO \e[0m --"
export LOG_OK="\e[92mOK   \e[0m --"
export LOG_WARN="\e[93mWARN \e[0m --"
export LOG_ERROR="\e[1;91mERROR\e[0m --"
export LOG_FATAL="\e[1;101mFATAL\e[0m --"

log_trace() {
  echo -e "${LOG_TRACE} $1"
}
export -f log_trace

log_info() {
  echo -e "${LOG_INFO} $1"
}
export -f log_info

log_ok() {
  echo -e "${LOG_OK} $1"
}
export -f log_ok

log_warn() {
  echo -e "${LOG_WARN} $1"
}
export -f log_warn

log_error() {
  echo -e "${LOG_ERROR} $1"
}
export -f log_error

log_fatal() {
  echo -e "${LOG_FATAL} $1"
}
export -f log_fatal

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
    hash -r 2>/dev/null
fi

log_ok 'Ready, use "ap" to invoke the command line interface'
